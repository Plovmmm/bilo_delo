import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from config import Config

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = str(update.effective_user.id)
    
    if user_id == Config.ADMIN_ID:
        # –°—Å—ã–ª–∫–∞ –Ω–∞ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        web_app_url = Config.APP_URL
        share_url = f"{Config.APP_URL}/guest/{user_id}"
        
        keyboard = [
            [InlineKeyboardButton("üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –º–æ—é –∫–∞—Ä—Ç—É", web_app={'url': web_app_url})],
            [InlineKeyboardButton("üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–∞—Ä—Ç–æ–π", callback_data='share_map')],
            [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='help')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_html(
            f"üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ '–ë—ã–ª–æ –¥–µ–ª–æ'!</b>\n\n"
            f"–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π –∏ –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç.\n\n"
            f"<b>–¢–≤–æ–π ID:</b> {user_id}\n"
            f"<b>–°—Ç–∞—Ç—É—Å:</b> üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\n\n"
            f"–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É:",
            reply_markup=reply_markup
        )
    else:
        # –î–ª—è –≥–æ—Å—Ç–µ–π
        await update.message.reply_html(
            "üëã <b>–ü—Ä–∏–≤–µ—Ç!</b>\n\n"
            "–≠—Ç–æ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <b>'–ë—ã–ª–æ –¥–µ–ª–æ'</b> - –¥–Ω–µ–≤–Ω–∏–∫ –ø–æ—Å–µ—â–µ–Ω–Ω—ã—Ö –º–µ—Å—Ç.\n\n"
            "–°–µ–π—á–∞—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏. "
            "–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞—Ä—Ç—ã –¥—Ä—É–∑–µ–π!",
            reply_markup=InlineKeyboardMarkup([[
                InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app={'url': Config.APP_URL})
            ]])
        )

async def share_map(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –¥–ª—è –æ–±—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞"""
    query = update.callback_query
    await query.answer()
    
    user_id = str(update.effective_user.id)
    if user_id == Config.ADMIN_ID:
        share_url = f"{Config.APP_URL}/guest/{user_id}"
        
        keyboard = [
            [InlineKeyboardButton("üó∫Ô∏è –û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É", url=share_url)],
            [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_to_main')]
        ]
        
        await query.edit_message_text(
            f"üîó <b>–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–±—â–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞</b>\n\n"
            f"–û—Ç–ø—Ä–∞–≤—å —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º, —á—Ç–æ–±—ã –æ–Ω–∏ –º–æ–≥–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–≤–æ—é –∫–∞—Ä—Ç—É:\n\n"
            f"<code>{share_url}</code>\n\n"
            f"–ö–∞—Ä—Ç–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è).",
            reply_markup=InlineKeyboardMarkup(keyboard),
            parse_mode='HTML'
        )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    query = update.callback_query
    await query.answer()
    
    help_text = (
        "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</b>\n\n"
        "üéØ <b>–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ:</b>\n"
        "1. –ù–∞–∂–º–∏ '‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ'\n"
        "2. –ö–ª–∏–∫–Ω–∏ –Ω–∞ –∫–∞—Ä—Ç–µ –≤ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ\n"
        "3. –ó–∞–ø–æ–ª–Ω–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Å—Ç–µ\n"
        "4. –°–æ—Ö—Ä–∞–Ω–∏\n\n"
        "üîó <b>–ö–∞–∫ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–∞—Ä—Ç–æ–π:</b>\n"
        "1. –ù–∞–∂–º–∏ 'üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è'\n"
        "2. –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º\n\n"
        "‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:</b>\n"
        "–ö–ª–∏–∫–Ω–∏ –Ω–∞ –ª—é–±—É—é –º–µ—Ç–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
    )
    
    keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data='back_to_main')]]
    await query.edit_message_text(help_text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='HTML')

async def back_to_main(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    query = update.callback_query
    await query.answer()
    await start(update, context)  # –ü–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏–∫—É —Å—Ç–∞—Ä—Ç–∞

def setup_bot():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(Config.BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(share_map, pattern='share_map'))
    application.add_handler(CallbackQueryHandler(help_command, pattern='help'))
    application.add_handler(CallbackQueryHandler(back_to_main, pattern='back_to_main'))
    
    return application
